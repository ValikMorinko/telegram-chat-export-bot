
import logging
import json
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes


TOKEN = "8380860231:AAEQWAITYuI3aEvOBIzAh8I_nvaP5-lGBT8"


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)


# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π
ROLES_FILE = "roles.json"


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π
def load_roles():
    if not os.path.exists(ROLES_FILE):
        return {"admins": []}
    with open(ROLES_FILE, "r", encoding="utf-8") as f:
        return json.load(f)
    
    
# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π
def save_roles():
    with open(ROLES_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4)


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    
# –ö–æ–º–∞–Ω–¥–∞ /stop
async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚õî –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    
    
# –ö–æ–º–∞–Ω–¥–∞ /status
async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    roles = load_roles()
    admins = roles.get("admins", [])
    if admins:
        text = "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\nüëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\n" + "\n".join(admins)
    else:
        text = "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç."
    await update.message.reply_text(text)

    
    
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("stop", stop))
    app.add_handler(CommandHandler("status", status))
    
    
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
    
    
if __name__ == "__main__":
  main()
    



